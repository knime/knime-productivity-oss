<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./callworkflow.png" 
	type="Other" 
	xmlns="http://knime.org/node/v4.1" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
    <name>Call Workflow (Table Based)</name>
    
    <shortDescription>
        Calls workflows
    </shortDescription>
    
    <fullDescription>
        <intro>

			This node can be used to call other workflows that reside either locally or remotely on the KNIME Hub. 
			The called workflow may contain one or multiple of the following nodes to receive data from the workflow
			containing this node: 
			<ul>
				<li>Container Input (Table)</li>
				<li>Container Input (Variable)</li>
				<li>Container Input (Credentials)</li>
			</ul>
			It may also contain a <i>Container Output (Table)</i> node to define the interface between this workflow
			and the called workflow in the following way:
			<br/>
			<br/>
			<b>Send Table. </b>
			The data table provided at the input of the <i>Call Workflow (Table Based)</i> node can be sent to 
			a <i>Container Input (Table)</i> node in the called workflow via the input parameter defined in the 
			<i>Container Input (Table)</i> node
			<br/>
			<br/>
			<b>Receive Table.</b>
			After the execution of the called workflow, a data table can be received from a 
			<i>Container Output (Table)</i> node in the called workflow via the output parameter defined in the 
			<i>Container Output (Table)</i> node. The received data table will be made available at the output port of 
			the <i>Call Workflow (Table Based)</i> node
			<br/>
			<br/>
			<b>Send Flow Variables.</b>
			Certain flow variables available in the <i>Call Workflow (Table Based)</i> node can be sent to a 
			<i>Container Input (Variable)</i> node in the called workflow. Currently, neither boolean, long, nor list or
			set flow variables are supported and will be ignored without warning. 
			The supported types are mostly converted to string flow
			variables (e.g., path or URI flow variables), except for integer flow variables and non-NaN double flow variables.
			Note that the <i>Call Workflow Service</i> node supports all flow variable types.
			<br/>
			<br/>
			<b>Send Flow Credentials.</b>
			All flow credentials available in the <i>Call Workflow (Table Based)</i> node can be sent to a 
			<i>Container Input (Credential)</i> node in the called workflow via the credential-input defined in the 
			<i>Container Input (Credential)</i> node<br/> 
			
			<br/>
			To call workflows on a KNIME Hub, a <i>KNIME Space Connector</i> node must be connected to this node.
			You can add a File System Connection port by clicking on the three dots on the node. 
			<br/>
			
        </intro>


		<tab name="Workflow">
			<option name="Remote execution address">Displays the address of the connected remote executor.</option>

			<option name="Short duration (only for remote execution)">
				Choose this if the called workflow is expected to finish within ten seconds. When selected, the invocation
				of the workflow will not poll its status but wait until the job completes (or fails). This removes the
				polling overhead and makes this option quicker for short-running workflows. Choosing this option
				for long-running workflows (&gt; a minute) will cause timeout problems.
			</option>

			<option name="Long duration (only for remote execution)">
				Choose this if the called workflow is expected to run for more than ten seconds. When selected, the
				invocation of the workflow will poll its status repeatedly until the job completes (or fails). 
				The polling is implemented so that for the first few seconds there will be frequent status checks 
				(poll interval 100ms or 500ms), whereas jobs that run minutes or hours will be checked only every few seconds.
			</option>

			<option name="Retain job on failure (only for remote execution)">
			When selected, failing jobs of the called workflow will be kept on the remote executor. This can be
			useful for debugging purposes. When not selected, the failing jobs will be discarded.
			</option>

			<option name="Discard job on successful execution (only for remote execution)">
			When selected, successful jobs of the called workflow will be discarded from the remote executor. When not selected, successful jobs will be kept.
			</option>

			<option name="Workflow path">The path to the workflow you want to call. Use the "Browse..." button to select.
			The selected path can be set via a path flow variable or exported to a path flow variable.
			</option>
			
			<option name="Deployment">The deployed workflow to execute. Use the "Browse..." button to select.
			This option is only visible when the node is connected to a KNIME Hub Authenticator node.
			</option>
			
			<option name="Execution context">
				Only for workflows on a KNIME Hub. The workflow will be executed in the selected context.
				An execution context of a hub space defines for instance the installed extensions, available credentials, 
				and the pool from which computation resources are used when the service is invoked.
			</option>
			
            <option	name="Advanced Settings">After a workflow has been selected, the input table can be
			directed to a desired <i>Container Input (Table)</i> node, the output table can be fetched from a desired
			<i>Container Output (Table)</i> node, and all flow variables/credentials can be pushed to a desired
			<i>Container Input (Variable)</i>/<i>Container Input (Credentials)</i> in the called workflow.
			This routing is done via drop down menus showing all available parameters in the selected workflow.
			</option>

			<option name="Use Fully Qualified Name for Input and Output Parameters">If checked, use the full parameter name
				to select the input and output. The parameter names are
				defined by the user in the configuration dialog
				of each of the parameters (like Container Input (Table) and Container Output (Table)node), e.g. "timeout",
				"count", etc. Using these 'simple names'
				may lead to duplicates, hence a 'fully qualified name' is constructed by
				appending a suffix, e.g. "timeout-1" or "count-5:6".
				While these suffixes guarantee unique parameter names across one workflow they may cause
				names not to match in case you
				call out to different workflows (e.g. in a loop). It's good practice to (manually) ensure that parameter
				names in the called workflow are unique and hence often the 'simple name' is sufficient (= do not check the box).<br/>
				<br/>
				In the case a parameter defined in any of the <i>Container Input (Table)</i>, <i>Container Output (Table)</i>
				or <i>Container Input (Variable)</i> nodes is not unique, the node ID will be appended to the parameter
				even though the use fully qualified names check box has not been checked.
			</option>
		</tab>

		<tab name="Advanced Settings">
			<option name="Workflow load timeout (only for remote execution)">
                The maximum amount of time to wait for the remote executor when trying to initialize remote workflow execution.
				Specified in seconds. A value of 0 means that no timeout will be used.
            </option>
            <option name="Fetch workflow parameters timeout (only for remote execution)">
				The maximum amount of time to wait for the remote executor when fetching the input and output parameters of the called workflow. 
				Specified in seconds. A value of 0 means that no timeout will be used.
			</option>
            <option name="Job Status Polling (only for remote execution)">
                During asynchronous invocation (option "Long Duration"), if a HTTP 5XX error occurs when polling for the job status, the node will retry the request. The node will wait a certain amount of time before each retry. The time to wait before the <i>n</i>-th attempt is determined by <i>base * multiplier^n</i>. Use a multiplier of 1 for a constant backoff, or a multiplier greater than 1 for an exponential backoff. Set the number of retries to 0 to disable retrying.
            </option>
		</tab>

    </fullDescription>
    <ports>
        <inPort index="0" name="Input table">The data to send to the callee workflow.</inPort>
    	<dynInPort insert-before="0" name="Connection"
			group-identifier="File System Connection">
			An optional connection to a file system that contains the callee workflow or a hub instance that provides deployed workflows.
			The callee workflow will be executed where it is located, e.g., on the KNIME Hub.
			If a Hub Authenticator is connected, only workflows that have previously been deployed can be executed. 
			If a Space Connector or Mountpoint connector is connected, any workflow can be selected and executed.
		</dynInPort>
        <outPort index="0" name="Output">Data returned by the callee workflow.</outPort>
    </ports>    
</knimeNode>
