<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./callworkflow.png" type="Other" deprecated ="true" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>Call Workflow (Table Based)</name>
    
    <shortDescription>
        Calls workflows
    </shortDescription>
    
    <fullDescription>
        <intro>

			This node can be used to call other workflows that resides either locally or on a KNIME Server. 
			The called workflow must contain at least one of the <i>Container Input (Table)</i>, 
			<i>Container Input (Variable)</i>, <i>Container Input (Credential)</i> or <i>Container Output (Table)</i> 
			nodes, which defines the interface between the <i>Call Workflow (Table Based)</i> node and the called 
			workflow in the following way:<br/>
			<br/>
	
			<b>Send Table</b>
			<br/>
			The data table provided at the optional input of the <i>Call Workflow (Table Based)</i> node can be sent to 
			a <i>Container Input (Table)</i> node in the called workflow via the input parameter defined in the 
			<i>Container Input (Table)</i> node
			<br/>
			<br/>
			<b>Receive Table</b>
			<br/>
			After the execution of the called workflow, a data table can be received from a 
			<i>Container Output (Table)</i> node in the called workflow via the output parameter defined in the 
			<i>Container Output (Table)</i> node. The received data table will be made available at the output port of 
			the <i>Call Workflow (Table Based)</i> node
			<br/>
			<br/>
			<b>Send Flow Variables</b>
			<br/>
			All flow variables available in the <i>Call Workflow (Table Based)</i> node can be sent to a 
			<i>Container Input (Variable)</i> node in the called workflow via the variable-input defined in the 
			<i>Container Input (Variable)</i> node
			<br/>
			<br/>
			<b>Send Flow Credentials</b>
			<br/>
			All flow credentials available in the <i>Call Workflow (Table Based)</i> node can be sent to a 
			<i>Container Input (Credential)</i> node in the called workflow via the credential-input defined in the 
			<i>Container Input (Credential)</i> node<br/> 
			
			<br/>
			To call workflows that reside on a KNIME server a <i>KNIME Server Connection</i> node must be connected to 
			the server connection input port. The server connection provides the node with the server address and the 
			user credentials. <br/> 
			<br/>
			
        </intro>
        
        <option name="Server address (Only when connected to a KNIME Server)">Displays the server address of the server connection.</option>
        
        <option name="Short duration: the workflow is expected to run quickly, less than 10 seconds
        				(only applies if the called workflow is executed on a KNIME server)">
        	Choose this if the called workflow is expected to finish within ten seconds. When selected, the invocation 
        	of the workflow will not poll its status, but wait until the job completes (or fails). This removes the 
        	polling overhead and makes this option quicker for short running workflows. Choosing this option 
        	for long running workflows (&gt; a minute) will cause timeout problems.
        </option>
        
        <option name="Long duration: the workflow is expected to run longer than 10 seconds
        				(only applies if the called workflow is executed on a KNIME server)">
        	Choose this if the called workflow is expected to run for more than ten seconds. When selected, the 
        	invocation of the workflow will poll its status, that is start, poll, poll, ..., finish, until the job 
        	completes (or fails). This option is reasonable for long running workflows where the overhead of regularly 
        	polling the status is negligible. The polling is implemented so that for the first few seconds there will 
        	be frequent status checks (poll interval 100ms or 500ms), whereas jobs that run minutes or hours will be 
        	checked only every few seconds.
       	</option>
        
        <option name="Retain job on failure (only applies if the called workflow is executed on a KNIME server)">
        When selected, failing jobs of the called workflow will be kept on the server. This can be 
        useful for debugging purposes. When not selected, the failing jobs will be discarded.</option>
        
        <option name="Discard job on successful execution (only applies if the called workflow is executed on a KNIME server)">
        When selected, successful jobs of the called workflow will be discarded from the server. When not selected, the
        successful jobs will be kept.
        </option>
        
        <option name="Workflow path">The path of the workflow you want to call. If connected to a server the path must be an absolute
        path in the server's repository. If not connected to a server the path may be absolute or use KNIME URLs. You can either enter the path by hand, 
        or click on <i>Browse Workflows</i> and then select one of the available workflows in a pop up dialog. The pop up dialog offers 
        a search field for easier location of the desired workflow. When a search string is entered, the dialog lists all workflows that contain the typed search string in their path.<br/>
        
        </option>

		<option name="Load timeout">
			The maximum amount of time the client will wait for the server to load the called workflow. Specified in
			seconds. A value of 0 means that no timeout will be used.
		</option>

		<option	name="Advanced Settings">After a workflow has been successfully selected, the input table can be 
		directed to a desired <i>Container Input (Table)</i> node, the output table can be fetched from a desired 
		<i>Container Output (Table)</i> node, and all flow variables/credentials can be pushed to a desired 
		<i>Container Input (Variable)</i>/<i>Container Input (Credentials)</i> in the called workflow. 
		This routing is done via drop down menus showing all available parameters in the selected workflow.
		</option>

		<option name="Use Fully Qualified Name for Input and Output Parameters">If checked, use the full parameter name
            to select the input and output. The parameter names are
            defined by the user in the configuration dialog
            of each of the parameters (like Container Input (Table) and Container Output (Table)node), e.g. "timeout",
            "count", etc. Using these 'simple names'
            may lead to duplicates, hence a 'fully qualified name' is constructed by
            appending a suffix, e.g. "timeout-1" or "count-5:6".
            While these suffixes guarantee unique parameter names across one workflow they may cause
            names not to match in case you
            call out to different workflows (e.g. in a loop). It's good practice to (manually) ensure that parameter
            names in the called workflow are unique and hence often the 'simple name' is sufficient (= do not check the box).<br/>
            <br/>
            In the case a parameter defined in any of the <i>Container Input (Table)</i>, <i>Container Output (Table)</i> 
            or <i>Container Input (Variable)</i> nodes is not unique, the node ID will be appended to the parameter 
            even though the use fully qualified names check box has not been checked.
        </option>
        
    </fullDescription>
    <ports>
        <inPort index="0" name="KNIME server connection">Connection to a KNIME server</inPort>
        <inPort index="1" name="Input table">Any input table</inPort>
        <outPort index="0" name="Output">Output of workflow call</outPort>
    </ports>    
</knimeNode>
