<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./callworkflow.png" type="Other"
	xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	
	<name>Call Workflow Service</name>

	<shortDescription>
		Executes another workflow and obtains the results for further processing.
	</shortDescription>

	<fullDescription>
		<intro>
		<p>
		Calls another workflow and obtains the results for further processing in this workflow.
		The workflow can receive inputs via <i>Workflow Service Input</i> nodes and return outputs using
		<i>Workflow Service Output</i> nodes.
		</p>
		<p>
		Each <i>Workflow Service Input</i> node in the workflow to be called will create an input port on this node
		when finishing the configuration of the Call Workflow Service node.
		Similarly, each <i>Workflow Service Output</i> node will create an output port on the node.
		</p>
		<p>
		The called workflow can be local or remote. If the workflow is remote, e.g., on the KNIME Hub, the execution will also be remote. 
		When the workflow is local, the execution will be performed on the machine on which the Analytics Platform is running.
		In contrast to the <i>Workflow Executor</i> node, this node does not require the workflow to be read using a <i>Workflow Reader</i> node.
		</p>
		<p>
		The difference between this node and the <i>Call Workflow (Table Based)</i> node is the set of supported 
		workflow input and output nodes.
		This node supports the <i>Workflow Service Input</i> and <i>Workflow Service Output</i> nodes, which support
		arbitrary port types and are more efficient than the various <i>Container Input</i> and <i>Container Output</i> nodes.
		The container input and output nodes on the other hand expect and produce data in a format that can easily be 
		produced by third-party software, whereas <i>Workflow Service Input</i> and <i>Workflow Service Output</i> nodes
		are designed exclusively to be used by other KNIME workflows.
		</p>
		<p>
		To define which <i>Workflow Service Input</i> node receives data from which of this node's input ports, each input node defines a <b>parameter identifier.</b>
		The parameter identifier is supposed to be unique, but it might happen that a workflow has multiple input nodes defining the same parameter name.
		In this case, KNIME will make the parameter names unique by appending the input node's node ID to the parameter name, e.g., "input-table" becomes "input-table-7". 
		</p>
		</intro>
		
		<tab name="Workflow">
			<option name="Remote execution address">Displays the address of the connected remote executor.</option>

			<option name="Short duration (only for remote execution)">
				Choose this if the called workflow is expected to finish within ten seconds. When selected, the invocation
				of the workflow will not poll its status but wait until the job completes (or fails). This removes the
				polling overhead and makes this option quicker for short-running workflows. Choosing this option
				for long-running workflows (&gt; a minute) will cause timeout problems.
			</option>

			<option name="Long duration (only for remote execution)">
				Choose this if the called workflow is expected to run for more than ten seconds. When selected, the
				invocation of the workflow will poll its status repeatedly until the job completes (or fails). 
				The polling is implemented so that for the first few seconds there will be frequent status checks 
				(poll interval 100ms or 500ms), whereas jobs that run minutes or hours will be checked only every few seconds.
			</option>

			<option name="Retain job on failure (only for remote execution)">
			When selected, failing jobs of the called workflow will be kept on the remote executor. This can be
			useful for debugging purposes. When not selected, the failing jobs will be discarded.
			</option>

			<option name="Discard job on successful execution (only for remote execution)">
			When selected, successful jobs of the called workflow will be discarded from the remote executor. When not selected, successful jobs will be kept.
			</option>

			<option name="Workflow path">The path to the workflow you want to call. Use the "Browse..." button to select.
			The selected path can be set via a path flow variable or exported to a path flow variable.
			</option>
			
			<option name="Deployment">The deployed workflow to execute. Use the "Browse..." button to select.
			This option is only visible when the node is connected to a KNIME Hub Authenticator node.
			</option>
			
			<option name="Execution context">
				Only for workflows on a KNIME Hub. The workflow will be executed in the selected context.
				An execution context of a hub space defines for instance the installed extensions, available credentials, 
				and the pool from which computation resources are used when the service is invoked.
			</option>
			
            <option name="Input Parameters">
                After you have specified a workflow path, you will see the input parameters of the workflow.
				Every input parameter corresponds to an input port of the node. This panel shows which input port's data is sent
				to which input parameter. By using the arrows, you can configure the binding of input ports to input parameters.
            </option>

			<option name="Output Parameters">
                Similar to the input parameters panel. Maps data sent back from the workflow to this node's output ports.
            </option>
            
			<option name="Adjust node ports"> When the node ports differ from the workflow parameters,
			this button is used to confirm updating the node ports, which may remove connections to other nodes. 
			</option>
		</tab>
		<tab name="Advanced Settings">
            <option name="Workflow load timeout (only for remote execution)">
                The maximum amount of time to wait for the remote executor when trying to initialize remote workflow execution.
				Specified in seconds. A value of 0 means that no timeout will be used.
            </option>
            <option name="Fetch workflow parameters timeout (only for remote execution)">
				The maximum amount of time to wait for the remote executor when fetching the input and output parameters of the called workflow. 
				Specified in seconds. A value of 0 means that no timeout will be used.
			</option>
            <option name="Job Status Polling (only for remote execution)">
                During asynchronous invocation (option "Long Duration"), if a HTTP 5XX error occurs when polling for the job status, the node will retry the request. The node will wait a certain amount of time before each retry. The time to wait before the <i>n</i>-th attempt is determined by <i>base * multiplier^n</i>. Use a multiplier of 1 for a constant backoff, or a multiplier greater than 1 for an exponential backoff. Set the number of retries to 0 to disable retrying.
            </option>
        </tab>
	</fullDescription>

	<ports>
		<dynInPort insert-before="0" name="Connection"
			group-identifier="File System Connection">
			An optional connection to a file system that contains the callee workflow or a hub instance that provides deployed workflows.
			The callee workflow will be executed where it is located, e.g., on the KNIME Hub.
			If a Hub Authenticator is connected, only workflows that have previously been deployed can be executed. 
			If a Space Connector or Mountpoint connector is connected, any workflow can be selected and executed.
		</dynInPort>
		<dynInPort insert-before="0" name="Workflow inputs" group-identifier="Inputs" configurable-via-menu="false">
			One input port for each <i>Workflow Service Input</i> node in the workflow to be executed. 
			The ports are automatically created when finishing the configuration of the node.   
		</dynInPort>
		<dynOutPort insert-before="0" name="Workflow outputs" group-identifier="Outputs" configurable-via-menu="false">
			One output port for each <i>Workflow Service Output</i> node in the workflow to be executed. 
			The ports are automatically created when finishing the configuration of the node.   
		</dynOutPort>
	</ports>
</knimeNode>
